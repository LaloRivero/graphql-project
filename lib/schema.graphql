"Valida los tipos de peligro del malware"
enum Severity{
    critical
    high
    medium
    low
}

union GlobalSearch = Malware | Company | Organization

type Malware {
    _id: ID!
    title : String!
    family : String
    year : Int @deprecated
    description: String!
    media : String
    info_provider: [Company]
    severity: Severity
}

interface Provider {
    _id: ID!
    title : String!
    country : String
}

type Company implements Provider {
    _id: ID!
    title : String!
    country : String
    logo: String
}

type Organization implements Provider {
    _id: ID!
    title : String!
    country : String
    webpage: String
}

type Query {
    "Devuelve la información de malwares"
    getMalwares: [Malware]
    "Devuelve un malware"
    getMalware(id: ID!): Malware
    "Devuelve la información de empresas"
    getProviders: [Provider]
    "Devuelve una empresa"
    getProvider(id: ID!): Provider
    "Ejecuta una búsqueda global"
    searchItems(keyword: String!): [GlobalSearch]
}

input MalwareInput {
    title : String!
    family : String
    year : Int
    description: String!
    media : String
    severity: Severity
}

input MalwareEditInput {
    title : String
    family : String
    year : Int
    description: String
    media : String
}

input ProviderInput {
    title : String!
    country : String
    logo: String
    webpage: String
}

input ProviderEditInput {
    title : String!
    country : String
    logo: String
    webpage: String
}

type Mutation {
    "Crear un malware"
    createMalware(input: MalwareInput!): Malware
    "Edita un malware"
    editMalware(_id: ID!, input: MalwareEditInput): Malware    
    "Crear un proveedor"
    createProvider(input: ProviderInput!): Provider
    "Edita una compañía"
    editProvider(_id: ID!, input: ProviderEditInput): Provider
    "Agrega un proveedor de información a un malware"
    addProvider(malwareID: ID!, companyID: ID!): Malware
}